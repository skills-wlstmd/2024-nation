apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: wsi-ing
  namespace: wsi
  annotations:
    alb.ingress.kubernetes.io/load-balancer-name: wsi-app-alb
    alb.ingress.kubernetes.io/scheme: internet-facing
    # alb.ingress.kubernetes.io/scheme: internal
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}]'
    alb.ingress.kubernetes.io/security-groups: sg_id
    alb.ingress.kubernetes.io/wafv2-acl-arn: waf_arn
    alb.ingress.kubernetes.io/healthcheck-path: /healthcheck
    alb.ingress.kubernetes.io/healthcheck-interval-seconds: '5'
    alb.ingress.kubernetes.io/healthcheck-timeout-seconds: '3'
    alb.ingress.kubernetes.io/healthy-threshold-count: '3'
    alb.ingress.kubernetes.io/unhealthy-threshold-count: '2'
	  alb.ingress.kubernetes.io/target-group-attributes: deregistration_delay.timeout_seconds=30
    alb.ingress.kubernetes.io/actions.targets: >
      {"type":"forward","forwardConfig":{"targetGroups":[{"serviceName":"customer-service","servicePort":8080,"weight":50},{"serviceName":"order-service","servicePort":8080,"weight":50}]}}
spec:
  ingressClassName: alb
  rules:
  - http:
      paths:
      - path: /v1/customer
        pathType: Prefix
        backend:
          service:
            name: customer-service
            port:
              number: 8080
      - path: /v1/product
        pathType: Prefix
        backend:
          service:
            name: product-service
            port:
              number: 8080
      - path: /v1/order
        pathType: Prefix
        backend:
          service:
            name: order-service
            port:
              number: 8080
      - path: /healthcheck
        pathType: ImplementationSpecific
        backend:
          service:
            name: targets
            port:
              name: use-annotation